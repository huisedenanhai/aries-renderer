#version 450 core

#include <Misc.glsl>

layout(local_size_x = 32, local_size_y = 32) in;

layout(set = 0, binding = 0) uniform sampler2D depth_buffer;
layout(set = 0, binding = 1, rg16f) writeonly uniform image2D hiz_buffer;

layout(set = 1, binding = 0) uniform Param {
    int width;
    int height;
};

void main() {
    ivec2 index = ivec2(gl_GlobalInvocationID.xy);
    if (index.x >= width || index.y >= height) {
        return;
    }

    vec2 uv = index_to_uv(index, vec2(1.0 / width, 1.0 / height));
    float depth01 = texture(depth_buffer, uv).r;
    imageStore(hiz_buffer, index, vec4(depth01, depth01, 0, 0));
}