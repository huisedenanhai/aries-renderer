#version 450 core

#include "AtmosphereCommon.glsl"

layout(local_size_x = 8, local_size_y = 8) in;

layout(set = 0, binding = 0, r11f_g11f_b10f) uniform image2D panorama_tex;

layout(set = 0, binding = 1) uniform sampler2D transmittance_lut;
layout(set = 0, binding = 2) uniform sampler2D multi_scattering_lut;

layout(set = 1, binding = 0) uniform AtmosphereParam {
    Atmosphere atmosphere;
};

layout(set = 1, binding = 1) uniform Param {
    vec3 sun_dir;
};

vec3 ray_march_sky_view(vec3 dir) {
    if (length(sun_dir) == 0) {
        return vec3(0.0);
    }
    return dir * 0.5 + 0.5;
}

void main() {
    ivec2 index = ivec2(gl_GlobalInvocationID.xy);
    ivec2 size = imageSize(panorama_tex);
    if (index.x >= size.x || index.y >= size.y) {
        return;
    }

    vec2 uv = index_to_uv(index, 1.0 / size);
    vec3 dir = panorama_uv_to_direction(uv);
    vec3 color = ray_march_sky_view(dir);

    imageStore(panorama_tex, index, vec4(color, 1.0));
}
