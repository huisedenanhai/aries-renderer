#version 450 core

#include <Misc.glsl>

layout(local_size_x = 32, local_size_y = 32) in;

layout(set = 0, binding = 0) uniform sampler2D last_level;
layout(set = 0, binding = 1, rg16f) writeonly uniform image2D cur_level;

layout(set = 1, binding = 0) uniform Param {
    int cur_level_width;
    int cur_level_height;
};

void main() {
    ivec2 index = ivec2(gl_GlobalInvocationID.xy);
    if (index.x >= cur_level_width || index.y >= cur_level_height) {
        return;
    }

    vec2 uv =
        index_to_uv(index, vec2(1.0 / cur_level_width, 1.0 / cur_level_height));

    vec4 max_depth01 = textureGather(last_level, uv, 0);
    vec4 min_depth01 = textureGather(last_level, uv, 1);

    imageStore(
        cur_level,
        index,
        vec4(max_comp_value(max_depth01), min_comp_value(min_depth01), 0, 0));
}
