#version 450 core

#include <Misc.glsl>

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(set = 0, binding = 0) uniform sampler2D env_hdr_tex;
layout(set = 0, binding = 1, r11f_g11f_b10f) uniform imageCube cube_map;

layout(set = 0, binding = 2) uniform Param {
    int size;
};

vec3 get_env_radiance(vec3 dir) {
    vec2 uv = hdr_direction_to_uv(dir);
    return texture(env_hdr_tex, uv).rgb;
}

void main() {
    ivec3 index = ivec3(gl_GlobalInvocationID.xyz);
    if (index.x >= size || index.y >= size) {
        return;
    }
    vec3 n = cube_map_index_to_direction(index, size);
    imageStore(cube_map, index, vec4(get_env_radiance(n), 1.0));
}